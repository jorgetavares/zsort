* Overview
  
  zsort is a collection of portable sorting algorithms. Common lisp provides the sort 
  and stable-sort functions but these can have different algorithms implemented 
  according to each implementation. Also, the standard sorting function might not be
  the best for a certain situation. This library aims to provide developers more 
  options. Although for most situations the standard functions are more than enough, 
  zsort could be a useful complement. 


* Sorting Algorithms

  The following comparison based algorithms are implemented:
  - insertion-sort
  - quicksort 
  - randomized-quicksort
  - merge-sort
  - heapsort

  At the moment, only one non-comparison algorithm is implemented:
  - counting-sort


* How to Use

  All comparison sorts have the same syntax (<sort> sequence &key key) and return a 
  sorted sequence. All the functions sort destructively, i.e., keep a copy of the 
  unsorted sequence if you wish to keep it. Counting sort only accepts sequences
  without key data and can be sorted in ascending or descending order, according to
  the value of the :ascend key (t for ascending and nil for descending).


* License
  
  zsort is available under an MIT-style license. See the LICENSE file.


